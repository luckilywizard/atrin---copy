// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile6 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level0":
            case "level3":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level5":
            case "level5":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "minimap0":
            case "minimap1":return tiles.createTilemap(hex`0a000a00111111111111111112110a0a0209090909080b0b0a0a0106060606070c0b0c0c0106060606070c0c0c0b0106060606070b0b0b0b0304040404050c0b0d0d0e0e0f0f0f0f0d0d0d0d0e0e0f0d0f0d0d0d0d0d0e0e0d0d0f0d0d0d0d0d0e0e0f0f0d0d1010`, img`
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
`, [myTiles.transparency16,sprites.castle.tilePath4,sprites.castle.tilePath1,sprites.castle.tilePath7,sprites.castle.tilePath8,sprites.castle.tilePath9,sprites.castle.tilePath5,sprites.castle.tilePath6,sprites.castle.tilePath3,sprites.castle.tilePath2,sprites.castle.tileGrass2,sprites.castle.tileGrass3,sprites.castle.tileGrass1,sprites.castle.tileDarkGrass1,sprites.castle.tileDarkGrass2,sprites.castle.tileDarkGrass3,sprites.builtin.forestTiles0,sprites.builtin.forestTiles1,sprites.builtin.forestTiles2], TileScale.Sixteen);
            case "minimap":
            case "level1":return tiles.createTilemap(hex`b0b0b070303030303020202020202020303030303030003030202020301010303030203030303090404040a0303030302020202020202021112121212000010131302020101010101030303030303090404040a0303030310101002020202020000000000000000000001011010100101010303030303090404040a0302030310101002020202020000000000000000000001011010100101010103100303050c0c0c06030303021010100302020202000000000000000000000101101010010102010303030303030303030202030203020203030202020000000000000000000001010101010101010102030202020202020202020303020303020203020200000000000000000000030101010101010102030202020202021003030302030302020202020303000000000000000000000301010101010101030203030303030302020202030302020202021002020000000000000000000003030103010101030202020210020202020203030203020202030302020200000000000000000000030310010301010302020202020202030203101010030303030202020202000000000000000000000302030301030103020202020303030302031010100202020303030202020000000000000000000003020302030301020303030303030303020310101003030310030202020200000000000000000000030303030f0f0f0f0f0f0303030202020202020303030303030202020202000000000000000000000d0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0d0d0d0303030303030303030202000000000000000000000f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f02000000000000000000000f0f0f0f140f0e0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f02000000000000000000000f0f0f0f0f0f0f0e0e0e0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0e000000000000000000000f0f0f0f0f0f0f0e0e0e0e0e0e0f0f0f0f0f0f0f0e0e0e0e0e0e0e0f0f0f000000000000000000000f0f0f0e0f0f0f0f0f0f0f0e140f0f0f0f0f0f0f0e0e0e140e0e0e0f0f0f000000000000000000000e0e0f0f0f0f0f0f0f0f0f0f0e0e0f0f0f0f0f0f0f0f0f0f0f0e0e0f0f0f000000000000000000000e0e0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0e0f0f0f000000000000000000000e0e0f0f0f0f0f140f0f0f0f0f0f0f0f0f0f140f0f0f0f0f0f0f0e0f0f0f000000000000000000000f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f000000000000000000000f0f0f0e0e0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0e0e0e0f0f0f0f0f000000000000000000000f0f0f0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f0f0f0f0e0e0e0e0f0f0f0f0f000000000000000000000f0f0f0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f0f0e0e0e0e0e0e0f0f0f0f0e`, img`
2222222222222222222222222222222........2
222........2222222222222222222..........
..2......................2..............
......222...............................
......222.............222...............
......222.............222...............
......................222...............
...2.........222........................
.............222........................
.............222......2.................
.2................2.....................
......222...............................
......222..................2............
......222...............................
..............................2222222222
......................222.....2.........
..222.................222.....2.........
..222.....2...........222.....2.........
..222.........................2.........
..............................2.........
................2.............2.........
...........................2..2.........
............2.................2.........
..2...............222.........2.........
..................222.........2.........
..................222...2.....2.........
..............................2.........
..............................2.........
..............................2.........
....2.........................2.........
..............................2.........
..............................2.........
............2..........2......2.........
..............................2.........
..............................2.........
.......2..........2...........2.........
..............................2.........
..............................2.........
..............................2.........
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
`, [myTiles.transparency16,sprites.castle.tileGrass2,sprites.castle.tileGrass1,sprites.castle.tileGrass3,sprites.castle.tilePath5,sprites.castle.tilePath7,sprites.castle.tilePath9,sprites.castle.tilePath3,sprites.castle.tilePath1,sprites.castle.tilePath4,sprites.castle.tilePath6,sprites.castle.tilePath2,sprites.castle.tilePath8,sprites.castle.tileDarkGrass2,sprites.castle.tileDarkGrass1,sprites.castle.tileDarkGrass3,sprites.builtin.forestTiles0,sprites.builtin.forestTiles1,sprites.builtin.forestTiles2,sprites.builtin.forestTiles3,sprites.castle.rock0,sprites.dungeon.floorLight0,sprites.dungeon.floorLight2,sprites.dungeon.doorClosedNorth,sprites.dungeon.stairSouth], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "myTile0":
            case "tile2":return tile2;
            case "myTile1":
            case "tile3":return tile3;
            case "myTile2":
            case "tile4":return tile4;
            case "myTile3":
            case "tile5":return tile5;
            case "myTile4":
            case "tile6":return tile6;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
